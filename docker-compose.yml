version: '3'

services:
    nginx:
        image: nginx:1.20.1-alpine
        container_name: ${COMPOSE_PROJECT_NAME}_nginx
        volumes:
#            - "./etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
#            - "./etc/ssl:/etc/ssl"
            - "./web/src:/var/www"
#            - "./etc/nginx/conf.d/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./_docker/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf"
        ports:
            - "3003:80"
            - "453:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
#        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: "no"
        depends_on:
            - app
            - pgsql
        networks:
            - app_default
    app:
        build:
            context: .
            dockerfile: _docker/php/php-fpm/${PHP_VERSION}/Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}_php
        restart: "no"
        volumes:
            - "./_docker/php/php-fpm/${PHP_VERSION}/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web/src:/var/www"
#        extra_hosts:
#            - "host.docker.internal:host-gateway"
#        environment:
#            PHP_IDE_CONFIG: serverName=Docker
        depends_on:
            - pgsql
        networks:
            - app_default
#    mysqldb:
#        image: mysql:${MYSQL_VERSION}
#        container_name: ${COMPOSE_PROJECT_NAME}_mysql
#        restart: "no"
#        env_file:
#            - ".env"
#        environment:
#            - MYSQL_DATABASE=${MYSQL_DATABASE}
#            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#            - MYSQL_USER=${MYSQL_USER}
#            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#        ports:
#            - "3316:3306"
#        volumes:
#            - "./data/db/mysql:/var/lib/mysql"
#        networks:
#            - app_default
    pgsql:
        image: 'postgres:${POSTGRES_VERSION}'
        container_name: '${COMPOSE_PROJECT_NAME}-pgsql'
        ports:
            - '${FORWARD_DB_PORT:-54320}:5432'
        environment:
            PGPASSWORD: '${POSTGRES_PASSWORD:-secret}'
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-secret}'
        volumes:
            - './data/db/pgsql:/var/lib/postgresql/data'
        networks:
            - app_default

networks:
    app_default:
        driver: bridge